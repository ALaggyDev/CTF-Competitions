from Crypto.Util.number import *

inp = [88952575866827947965983024351948428571644045481852955585307229868427303211803239917835211249629755846575548754617810635567272526061976590304647326424871380247801316189016325247,
       67077340815509559968966395605991498895734870241569147039932716484176494534953008553337442440573747593113271897771706973941604973691227887232994456813209749283078720189994152242]
p = 396430433566694153228963024068183195900644000015629930982017434859080008533624204265038366113052353086248115602503012179807206251960510130759852727353283868788493357310003786807

# This is a simultaneous linear equations in two unknowns
# 13^(flag-1)      + 37^(flag-1)      = n1 (mod p)
# 13^(flag-1) * 13 + 37^(flag-1) * 37 = n2 (mod p)

# Solve for 13^(flag-1)
# 13^(flag-1) = (n2 - (n1 * 37)) / -24     (mod p)

# 13^(flag-1) is actually smaller than p, so we can directly take its logarithm
# (I got stuck in here for an embarrassingly long amount of time)
# flag = log_13((n2 - (n1 * 37)) / -24) + 1

R = GF(p)

rhs = R(inp[1] - inp[0] * 37) / -24

flag = log(rhs, 13) + 1
print(long_to_bytes(flag))
